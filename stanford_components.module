<?php

/**
 * @file
 * File description.
 *
 * Long description.
 */

use Drupal\ui_patterns\UiPatterns;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess().
 */
function stanford_components_preprocess(&$variables, $hook) {
  foreach (array_keys(UiPatterns::getPatternDefinitions()) as $pattern_id) {
    if (strpos($hook, $pattern_id) !== FALSE) {
      $ids = &drupal_static(__FUNCTION__, []);
      if (!isset($ids[$pattern_id])) {
        $ids[$pattern_id] = 0;
      }

      if (!isset($variables['attributes']['id'])) {
        $variables['attributes']['id'] = Html::getUniqueId($pattern_id);
      }

      break;
    }
  }
}

/**
 * Implements hook_preprocess_patterns_overview_page().
 */
function stanford_components_preprocess_patterns_overview_page(&$variables) {
  uasort($variables['patterns'], function ($pattern_a, $pattern_b) {
    return strcmp($pattern_a['label'], $pattern_b['label']);
  });
}

/**
 * Implements hook_theme_suggestions_alter().
 */
function stanford_components_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'field') {
    $entity_type = $variables['element']['#entity_type'];
    $bundle = $variables['element']['#bundle'];
    $view_mode = $variables['element']['#view_mode'];

    // Load display settings for the entity.
    /** @var \Drupal\Core\Entity\Entity\EntityViewDisplay $entity_display */
    $entity_display = \Drupal::entityTypeManager()
      ->getStorage('entity_view_display')
      ->load($entity_type . '.' . $bundle . '.' . $view_mode);

    if (!$entity_display) {
      return;
    }

    // Allow specific field templates for each pattern.
    $ds_settings = $entity_display->getThirdPartySettings('ds');
    if (isset($ds_settings['layout'])) {
      $pattern_id = substr($ds_settings['layout']['id'], 8);
      $suggestions[] = "field__pattern";
      $suggestions[] = "field__pattern__$pattern_id";

      // Allows templates for each pattern region.
      foreach ($ds_settings['regions'] as $region_name => $fields) {
        if (in_array($variables['element']['#field_name'], $fields)) {
          $suggestions[] = "field__pattern__$region_name";
          $suggestions[] = "field__pattern__{$pattern_id}__$region_name";
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_views_view_pattern().
 */
function stanford_components_preprocess_views_view_pattern(&$variables) {
  /** @var \Drupal\views\ViewExecutable $view */
  $view = $variables['view'];
  $pattern = $view->style_plugin->options['pattern'];
  $variables['pattern'] = $pattern;
}
